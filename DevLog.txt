1.vue中 addEventListener绑定事件时，function直接写在addEventListener中存在偶发绑定失败问题
  例：
    el.addEventListener('transitionend', function(){}, false)，在刷新页面时偶发性绑定失败，经测试此方式绑定事件耗费时间比较久
  解决：
    把function拿出来，基本不存在延迟，绑定快
    成功：el.addEventListener('transitionend', eventTransitionend, false)

2.使用vue+typeScript的class时，不要声明Object类型，即便在声明时不报错，但在调用属性时也会报错
  例：
    datas: Object = {a:1}
    在方法中使用获取a：
    this.datas.a // 报错
  解决：
    使用any类型替换
    datas: any = {a:1}
3.style使用scoped模式中，使用动画：@keyframe时，动画名会被加上hash码导致动画设置失败
  例：
    @keyframe toTop {}，解析为：@keyframe toTop-ecd4be54 {}
  解决： 
    @keyframe 放在单独的不使用scoped模式的style中
4.排行无缝滚动效果实现
  <div id="parent">
    <div class="list"></div>
    ...
  </div>
  舍弃方法：
    (1) 父元素parent设置css3 animation 
      优点：不需要使用js操作dom，无消耗。实现简单方便
      缺点：不能自定义滚动高度
    (2) 子元素list 定位+js 通过设置滚动元素的top值实现
      优点：思路清晰
      缺点：滚动效果不太好，执行占用大量内存
    (3) 设置两个父元素parent，在parent层级实现无缝滚动
      优点：简单，不必考虑子元素个数
      缺点：生成大量多余dom
  当前使用方法
    子元素list transform+定位(多个同级元素使用transform距离是以相邻元素为起点，通过定位实现父元素为起点)
    每次把队列前滚动到视区之外的子元素移到队列最后
    优点:
      (2) + transform使用硬件加速，相对不占cpu内存。动画比较连贯
    缺点：
      需要操作dom

5.组件绑定动态props时无法给方法传参
  例：
    <RollingOfRankings :datas=computedPostParams('DayAreaRank')/> // 报错unexpected-character-in-unquoted-attribute-value